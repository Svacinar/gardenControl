{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrik Mackerle\\\\Desktop\\\\javascript\\\\garden_app_v2\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"./components/UI/Button/button.js\";\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serverConnected: false,\n      apiResponse: \"Hi there, server not connected....\"\n    };\n  }\n\n  callAPI() {\n    console.log(\"api called\");\n    fetch(\"http://localhost:9000/\").then(res => res.text()).then(res => {\n      let newState = JSON.parse(res);\n      this.setState({ ...newState,\n        apiResponse: \"Server Connected\",\n        serverConnected: true\n      });\n    }).catch(err => err);\n  }\n\n  componentDidMount() {\n    this.callAPI();\n  }\n\n  countdownHandler(valveName) {\n    console.log(\"helou\");\n    setTimeout(this.callAPI(), 3500);\n  }\n\n  handleButtonClick(e, valveName) {\n    e.preventDefault();\n    console.log(this.state[valveName]);\n    axios.get(`http://localhost:9000/${valveName}`).then(this.setState({\n      [valveName]: !this.state[valveName]\n    }, () => console.log(this.state[valveName]))).then(this.countdownHandler(valveName));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Welcome to the Control System\")), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, this.state.apiResponse), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      name: \"Valve 1\",\n      status: this.state.valve1,\n      clicked: e => this.handleButtonClick(e, \"valve1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      name: \"Valve 2\",\n      status: this.state.valve2,\n      clicked: e => this.handleButtonClick(e, \"valve2\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"footer\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Created 2020, Patrik Mackerle, version 0.1 ALFA\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Patrik Mackerle/Desktop/javascript/garden_app_v2/frontend/src/App.js"],"names":["React","Component","Button","axios","App","state","serverConnected","apiResponse","callAPI","console","log","fetch","then","res","text","newState","JSON","parse","setState","catch","err","componentDidMount","countdownHandler","valveName","setTimeout","handleButtonClick","e","preventDefault","get","render","logo","valve1","valve2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Button from \"./components/UI/Button/button.js\";\n\nimport axios from 'axios';\n\nclass App extends Component {  \n        \n    state = {\n          serverConnected: false,\n          apiResponse: \"Hi there, server not connected....\", \n          };\n    \n\n    callAPI() {\n      console.log(\"api called\")\n        fetch(\"http://localhost:9000/\")            \n            .then(res => res.text())\n            .then(res => {\n              let newState = JSON.parse(res);\n              this.setState({...newState, apiResponse: \"Server Connected\", serverConnected: true})\n              \n            })\n            .catch(err => err);\n    }\n\n    componentDidMount() {\n        this.callAPI();\n    } \n    countdownHandler(valveName) {\n      console.log(\"helou\")\n      setTimeout(this.callAPI(), 3500)\n    }   \n\n    handleButtonClick(e, valveName) {    \n      e.preventDefault();\n      console.log(this.state[valveName]);\n      axios.get(`http://localhost:9000/${valveName}`)\n      .then(this.setState({[valveName]: !this.state[valveName]}, () => console.log(this.state[valveName])))\n      .then(this.countdownHandler(valveName));\n    }\n\n    \n  \n\n    render() {     \n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h1 className=\"App-title\">Welcome to the Control System</h1>    \n                    \n                </header>\n                <h2 className = \"App-intro\">{this.state.apiResponse}</h2>\n                <div className= \"btn-group\">                  \n                   <Button name={\"Valve 1\"} status = {this.state.valve1} clicked = {e => this.handleButtonClick(e, \"valve1\")}/>\n                   <Button name={\"Valve 2\"} status = {this.state.valve2} clicked = {e => this.handleButtonClick(e, \"valve2\")}/>\n                </div>\n              \n                <footer className=\"footer\">Created 2020, Patrik Mackerle, version 0.1 ALFA</footer>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}