{"version":3,"sources":["components/UI/Switch/switch.module.css","components/UI/Field/field.module.css","components/Weather/keys.js","components/images/gardenApp_logo2.png","components/UI/Navbar/navbar.module.css","components/videoBackground/grass.mp4","components/UI/Navbar/navbar.jsx","components/videoFeature.jsx","components/UI/WeatherDayCard/WeatherDayCard.jsx","components/Weather/weather.jsx","components/UI/Switch/switch.jsx","components/UI/Field/field.jsx","components/ManualControl/ManualControl.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","API_KEY","BASE_URL","navbar","props","className","classes","src","logo","alt","to","videoFeature","autoPlay","loop","muted","style","position","opacity","width","left","top","height","objectFit","transform","zIndex","Grass","type","weatherDayCard","temp","api","key","keys","base","Weather","response","state","Axios","get","then","res","console","log","data","main","setState","this","getWeather","WeatherDayCard","Component","Switch","text","name","status","switch","switchInput","id","onClick","e","clicked","switchLabel","htmlFor","backgroundColor","switchSlider","field","timerValue","timer","useState","setTimer","wrapper","onSubmit","preventDefault","axios","process","label","inputField","onChange","target","value","required","submitButton","ManualControl","serverConnected","apiResponse","valves","valve","cycling","intervalID","newState","catch","err","callAPI","setInterval","bind","clearInterval","valveName","valves2","valvesSwitches","Object","map","handleButtonClick","handleCycleClick","App","path","exact","component","render","Boolean","window","location","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.95bcd41b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"switch_switch__3lc8O\",\"switchInput\":\"switch_switchInput__25xe8\",\"switchLabel\":\"switch_switchLabel__2ug9s\",\"switchSlider\":\"switch_switchSlider__2th6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"field_btn__9lO_l\",\"label\":\"field_label__1s0Ke\",\"wrapper\":\"field_wrapper__3EIya\"};","module.exports = {\n  API_KEY: '67c8ba4614f68ee675214715a1771ebd',\n  BASE_URL: 'https://api.openweathermap.org/data/2.5/',\n};\n","module.exports = __webpack_public_path__ + \"static/media/gardenApp_logo2.dc4d2143.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__2V3RT\",\"active\":\"navbar_active__MKLoI\"};","module.exports = __webpack_public_path__ + \"static/media/grass.8c0dd03c.mp4\";","import React, {Component} from 'react';\r\n\r\nimport {Link, NavLink, Route} from 'react-router-dom';\r\n\r\nimport logo from \"../../images/gardenApp_logo2.png\";\r\n\r\n\r\nimport classes from './navbar.module.css';\r\n\r\nconst navbar = (props) => {\r\n  return (\r\n  <div className={classes.navbar}>\r\n     <img src = {logo} alt=\"logo\"/>      \r\n      <Link to=\"/\">Irrigation Control</Link>\r\n      <Link to=\"/settings\">Irrigation Settings</Link>          \r\n      <Link to=\"/weather\">Weather</Link>\r\n      <Link to=\"/about\">About</Link>\r\n  </div>\r\n)}\r\n\r\nexport default navbar","import React from 'react';\n\nimport Grass from './videoBackground/grass.mp4';\n\nconst videoFeature = () => (\n  <div>\n    <video\n      autoPlay\n      loop\n      muted\n      style={{\n        position: 'absolute',\n        opacity: 0.6,\n        width: '100%',\n        left: '50%',\n        top: '50%',\n        height: '100%',\n        objectFit: 'cover',\n        transform: 'translate( -50%, -50%)',\n        zIndex: '-1',\n      }}\n    >\n      <source src={Grass} type=\"video/mp4\" />\n    </video>\n  </div>\n);\n\nexport default videoFeature;\n","import React, {Component} from 'react';\r\n\r\nimport {Link, NavLink, Route} from 'react-router-dom';\r\n\r\n\r\nconst weatherDayCard = (props) => {\r\n  return (\r\n  <div>\r\n      <p>It is {props.temp} degrees</p>\r\n  </div>\r\n)}\r\n\r\nexport default weatherDayCard","import React from \"react\";\r\nimport keys from \"./keys\";\r\nimport { Component } from \"react\";\r\n\r\nimport Axios from 'axios';\r\nimport WeatherDayCard from \"../UI/WeatherDayCard/WeatherDayCard\";\r\n\r\nconst api = {\r\n  key: keys.API_KEY,\r\n  base: keys.BASE_URL,\r\n};\r\n\r\nclass Weather extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.response = null;\r\n\r\n        this.state = {\r\n            temp: \"N/A\"\r\n        }\r\n      }\r\n\r\n\r\n    getWeather() {\r\n        Axios.get(`${api.base}weather?lat=50.171000&lon=15.825160&APPID=${api.key}&units=metric`)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            this.response = res.data\r\n            console.log(this.response.main.temp)\r\n            this.setState({temp: this.response.main.temp})\r\n        })\r\n        console.log(\"should fetch weather\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getWeather();\r\n    }  \r\n    \r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Experimental weather component</h1>\r\n                <WeatherDayCard temp = {this.state.temp}/>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Weather;\r\n","import React, { Component } from 'react';\r\n\r\nimport classes from './switch.module.css';\r\n\r\nconst Switch = (props) => {\r\n  let text = props.name\r\n  if (props.status) {\r\n    text += \" is ON\"\r\n  } else {\r\n    text += \" is OFF\"\r\n  }\r\n  return (\r\n    <div className={classes.switch}>\r\n      <p>{text}</p>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={classes.switchInput}\r\n        name={props.name}\r\n        id={props.name}\r\n        onClick={e => props.clicked(e)}\r\n        status={props.status}\r\n      />\r\n      <label\r\n        className={classes.switchLabel}\r\n        htmlFor={props.name}\r\n        style=\r\n        {\r\n          props.status ?\r\n            {\r\n              backgroundColor: `rgba(124, 252, 0,0.6)`\r\n            }\r\n            : null\r\n        }\r\n      >\r\n        <span className={classes.switchSlider} style={\r\n          props.status ?\r\n            {\r\n              left: `calc(100% - 2px)`,\r\n              transform: `translateX(-100%)`\r\n            }\r\n            : null}></span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Switch\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport classes from './field.module.css';\r\nimport axios from 'axios';\r\n\r\nconst field = (props) => {\r\n    let timerValue = (props.timer / 60000);\r\n\r\n    const [timer, setTimer] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.get(`${process.env.REACT_APP_API}/setTimer/${timer}`);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <form onSubmit={handleSubmit}>\r\n                <label className={classes.label} type=\"label\" htmlFor=\"timerValue\">Timer set to {timerValue} minutes\r\n                <input type=\"text\" id=\"timerValue\" name=\"timerValue\" className={classes.inputField} onChange={e => setTimer(e.target.value * 60000)} required />\r\n                </label>\r\n                <input type=\"submit\" value=\"Set\" className={classes.submitButton} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default field;\r\n","import React, { Component } from \"react\";\r\nimport Switch from '../UI/Switch/switch';\r\nimport Field from '../UI/Field/field';\r\nimport axios from 'axios';\r\n\r\nclass ManualControl extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.intervalID = null;\r\n  }\r\n\r\n  state = {\r\n    serverConnected: false,\r\n    apiResponse: \"Error has occured, please refresh...\",\r\n    valves: {\r\n      valve: {\r\n        name: 'N/A',\r\n        status: false,\r\n      }\r\n    },\r\n    cycling: false\r\n  }\r\n\r\n\r\n  callAPI() {\r\n    axios.get(`${process.env.REACT_APP_API}/api`)\r\n      .then(res => {\r\n        let newState = res.data;\r\n        this.setState({ ...newState, apiResponse: \"Server Connected\", serverConnected: true })\r\n      })\r\n      .then(console.log(this.state))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callAPI();\r\n    this.intervalID = setInterval(this.callAPI.bind(this), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  handleButtonClick(e, valveName) {\r\n    if (this.state.cycling && this.state.valves[valveName].status === false) {\r\n      axios.get(`${process.env.REACT_APP_API}/cycle`)\r\n        .then(this.callAPI())\r\n      return\r\n    }\r\n    axios.get(`${process.env.REACT_APP_API}/run/${valveName}`)\r\n      .then(this.callAPI())\r\n  }\r\n  handleCycleClick(e) {\r\n    this.setState({ cycling: !this.state.cycling })\r\n  }\r\n\r\n  render() {\r\n    const valves2 = this.state.valves;\r\n    const valves = Object.keys(valves2);\r\n    const valvesSwitches = valves.map((valve, id) =>\r\n      <Switch key={id} name={\"Valve \" + (id + 1)} status={this.state.valves[valve].status} clicked={e => this.handleButtonClick(e, valve)} />\r\n    )\r\n    return (\r\n      <div className=\"switch-group\">\r\n        <h2>{this.state.apiResponse}</h2>\r\n        <Field timer={this.state.timer} />\r\n        <Switch name={\"Cycling\"} status={this.state.cycling} clicked={e => this.handleCycleClick(e)} />\r\n        {valvesSwitches}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManualControl;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/UI/Navbar/navbar';\nimport VideoFeature from './components/videoFeature';\nimport Weather from './components/Weather/weather';\nimport ManualControl from './components/ManualControl/ManualControl';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <VideoFeature />\n        <div id=\"wrapper\">\n          <Route path=\"/\" exact component={ManualControl} />\n          <Route path=\"/weather\" component={Weather} />\n          <Route path=\"/about\" render={() => <div>There will be About Component - details and stuff....</div>} />\n          <Route path=\"/settings\" render={() => <div>Calendar, where user can schedule irrigation</div>} />\n        </div>\n        <footer className=\"footer\">Created 2020, Patrik Mackerle, version 1</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}